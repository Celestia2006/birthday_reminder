{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hima\\\\Desktop\\\\birthday-reminder\\\\src\\\\components\\\\CalendarView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport { format, isSameDay } from \"date-fns\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"../styles/CalendarView.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarView = ({\n  birthdays\n}) => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  // Check if date has birthdays\n  const hasBirthdays = date => {\n    return birthdays.some(bday => isSameDay(new Date(bday.date), date));\n  };\n\n  // Get birthdays for selected date\n  const getDateBirthdays = date => {\n    return birthdays.filter(bday => isSameDay(new Date(bday.date), date));\n  };\n\n  // Custom tile content\n  const tileContent = ({\n    date,\n    view\n  }) => {\n    if (view === \"month\") {\n      return hasBirthdays(date) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"birthday-dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 35\n      }, this) : null;\n    }\n  };\n\n  // Custom tile className\n  const tileClassName = ({\n    date,\n    view\n  }) => {\n    if (view === \"month\") {\n      let classes = [];\n      if (isSameDay(date, new Date())) classes.push(\"today\");\n      if (hasBirthdays(date)) classes.push(\"has-birthday\");\n      return classes.join(\" \");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: setDate,\n      value: date,\n      onClickDay: value => setSelectedDate(value),\n      tileContent: tileContent,\n      tileClassName: tileClassName,\n      className: \"custom-calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), selectedDate && getDateBirthdays(selectedDate).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"birthday-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Birthdays on \", format(selectedDate, \"MMMM do\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), getDateBirthdays(selectedDate).map(bday => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"birthday-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: bday.photo,\n          alt: bday.name,\n          className: \"birthday-image\",\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = \"/images/default.jpg\";\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: bday.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Turning \", bday.canonicalAge + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, bday.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarView, \"bAyy/MOlmDN/rTJlXelk9O71fn0=\");\n_c = CalendarView;\nexport default CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","useState","Calendar","format","isSameDay","jsxDEV","_jsxDEV","CalendarView","birthdays","_s","date","setDate","Date","selectedDate","setSelectedDate","hasBirthdays","some","bday","getDateBirthdays","filter","tileContent","view","className","fileName","_jsxFileName","lineNumber","columnNumber","tileClassName","classes","push","join","children","onChange","value","onClickDay","length","map","src","photo","alt","name","onError","e","target","onerror","canonicalAge","id","_c","$RefreshReg$"],"sources":["C:/Users/Hima/Desktop/birthday-reminder/src/components/CalendarView.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { format, isSameDay } from \"date-fns\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"../styles/CalendarView.css\";\r\n\r\nconst CalendarView = ({ birthdays }) => {\r\n  const [date, setDate] = useState(new Date());\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  // Check if date has birthdays\r\n  const hasBirthdays = (date) => {\r\n    return birthdays.some((bday) => isSameDay(new Date(bday.date), date));\r\n  };\r\n\r\n  // Get birthdays for selected date\r\n  const getDateBirthdays = (date) => {\r\n    return birthdays.filter((bday) => isSameDay(new Date(bday.date), date));\r\n  };\r\n\r\n  // Custom tile content\r\n  const tileContent = ({ date, view }) => {\r\n    if (view === \"month\") {\r\n      return hasBirthdays(date) ? <div className=\"birthday-dot\"></div> : null;\r\n    }\r\n  };\r\n\r\n  // Custom tile className\r\n  const tileClassName = ({ date, view }) => {\r\n    if (view === \"month\") {\r\n      let classes = [];\r\n      if (isSameDay(date, new Date())) classes.push(\"today\");\r\n      if (hasBirthdays(date)) classes.push(\"has-birthday\");\r\n      return classes.join(\" \");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      <Calendar\r\n        onChange={setDate}\r\n        value={date}\r\n        onClickDay={(value) => setSelectedDate(value)}\r\n        tileContent={tileContent}\r\n        tileClassName={tileClassName}\r\n        className=\"custom-calendar\"\r\n      />\r\n\r\n      {selectedDate && getDateBirthdays(selectedDate).length > 0 && (\r\n        <div className=\"birthday-list\">\r\n          <h3>Birthdays on {format(selectedDate, \"MMMM do\")}</h3>\r\n          {getDateBirthdays(selectedDate).map((bday) => (\r\n            <div key={bday.id} className=\"birthday-item\">\r\n              <img\r\n                src={bday.photo}\r\n                alt={bday.name}\r\n                className=\"birthday-image\"\r\n                onError={(e) => {\r\n                  e.target.onerror = null;\r\n                  e.target.src = \"/images/default.jpg\";\r\n                }}\r\n              />\r\n              <div>\r\n                <h4>{bday.name}</h4>\r\n                <p>Turning {bday.canonicalAge + 1}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}